import { useState } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import Header from '../components/header';
import styles from '../styles/navbar.module.css';
import Link from 'next/link'
import Location from '../components/location';
import Upcoming from '../components/upcoming';
import Past from '../components/past'
import City from '../components/filter'

export default function Home({dataFilter, upcomingFilter, pastFilter,statesFilter, citiesFilter}) {

const [currentNav, setCurrentNav] = useState("nearest")



const onNearestHandler = () => {

  setCurrentNav("nearest")
  
}

const onUpcomingHandler = () => {

  setCurrentNav("upcoming")
  
}

const onPastHandler = () => {

  setCurrentNav("past")
  
}

const onFilterHandler = () => {
  setCurrentNav("city")
}
  return (
    <div  className={styles.overall}>
      <Head>
        <title>Edvora</title>
        <meta name="description" content="Generated by create next app" />
k        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main >

        {/* header */}
        <Header />

        {/* Navbar */}
        <nav className={styles.navbar}>
          <ul className={styles.ride}>
            <div className={styles.flexRide}>

            <li onClick={onNearestHandler} className={`styles.rideList1  ${currentNav === "nearest" ? styles.active : ""}`}>Nearest Ride</li>
            <li onClick={onUpcomingHandler} className={`styles.rideList1 ${currentNav === "upcoming" ? styles.active : ""}`}>Upcoming rides (4)</li>
            <li onClick={onPastHandler} className={`styles.rideList1 ${currentNav === "past" ? styles.active : ""}`}>Past rides(2)</li>  
              </div>
            
            <div>
            <li className={styles.filterSelf} onClick={onFilterHandler} >Filters</li>

            </div>

          </ul>
        </nav>

         {currentNav === "nearest" ? <Location dataFilter={dataFilter}/>: ""}

        {currentNav === "upcoming" ? <Upcoming upcomingFilter={upcomingFilter}/> : ""}

        {currentNav === "past" ? <Past pastFilter={pastFilter}/> : ""}

        {currentNav === "city" ? <City citiesFilter={citiesFilter} statesFilter={statesFilter}/> : ""}

        </main>

      
    </div>
  )
}
export async function getServerSideProps () {
  const res = await fetch(`https://assessment.api.vweb.app/rides`)
  const rides = await res.json()

  const req = await fetch(`https://assessment.api.vweb.app/user`)
  const users = await req.json()
  

  const dataFilter = rides.filter((ride) => {
      for (const station of ride.station_path) {
          if(Math.abs(users.station_code - station) < 3) {
              return true
              break;
          }
      }
      return
  })

  const upcomingFilter = rides.filter((ride) => ( new Date() < new Date(ride.date)) )

  const pastFilter = rides.filter((ride) => ( new Date() > new Date(ride.date)) ) 
  
  const  statesFilter = rides.map(ride => ride.state);
  const citiesFilter = rides.map(ride => ride.city)


  return {props : {
       dataFilter,
      upcomingFilter,
      pastFilter,
      statesFilter,
      citiesFilter
      }}
}